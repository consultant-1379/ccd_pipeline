pipeline {
  agent {
    node {
      label 'FEM3s11_POD_E_CCD_Pipeline'
    }
  }
  // The options directive is for configuration that applies to the whole job.
  options {
    buildDiscarder(logRotator(numToKeepStr:'30'))
    timeout(time: 40, unit: 'MINUTES')
    timestamps()
  }
  tools {
    jdk 'JDK 1.8.0_101 vApp'
    maven 'Maven 3.0.5'
  }
  stages {
    stage('Clean') {
      steps {
        sh '''
        docker stop $(docker ps -a -q) || true
        docker rm -f $(docker ps -a -q) || true
        docker volume rm -f $(docker volume ls -qf dangling=true) || true
        docker rmi -f $(docker images -a -q) || true
        '''
      }
    }
    stage('Verify Commit Message Version Type') {
      steps {
        script {
          sh '''
          if (git log -1 | grep "\\[PATCH\\]"); then
            echo 'Valid [PATCH] Version Found';
          elif (git log -1 | grep "\\[MINOR\\]"); then
            echo 'Valid [MINOR] Version Found';
          elif (git log -1 | grep "\\[MAJOR\\]"); then
            echo 'Valid [MAJOR] Version Found';
          else
            echo 'Pre-Code Review Failed. Commit message must contain one of the following: [PATCH]/[MINOR]/[MAJOR]'
            exit 1
          fi;
          '''
        }
      }
    }
    stage('Linting Playbooks') {
      steps {
        sh "docker run --rm -v \$(pwd):/playbooks armdocker.rnd.ericsson.se/dockerhub-ericsson-remote/sdesbure/ansible-lint ansible-lint  -v --parseable-severity ./ansible/*.yml -c ./ansible/.ansible-lint"
      }
    }
  }
  // The post build actions
  post {
    always {
      sh "sudo rm -fr ${env.WORKSPACE}/*"
    }
    success {
      echo 'Pipeline Successfully Completed'
    }
    failure {
      emailext(attachLog: true,
               attachmentsPattern: 'currentBuild.rawBuild.log',
               from: 'enmadm100@lmera.ericsson.se',
               to: "${env.GERRIT_EVENT_ACCOUNT_EMAIL}",
               subject: "Failed: Jenkins Job ${env.JOB_NAME}",
               body: "Job: ${env.JOB_NAME}\nBuild Number: ${env.BUILD_NUMBER}\nThe Job build URL: ${env.BUILD_URL}")
    }
  }
}
