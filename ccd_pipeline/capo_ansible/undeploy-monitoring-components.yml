## How To Use
#   ansible-playbook cleanup-monitoring-components.yml -e deployment_id={ deployment_id }
---
- name: monitoring
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    kubeconfig_path: "/tmp/{{ deployment_id | mandatory }}.admin.conf"
  roles:
    - deployment_id
    - dtt
    - get_helm3_path
  tasks:
    - name: Include role get_kube_config for {{ deployment_id }}
      include_role:
        name: get_kube_config

    - name: Uninstall Eventrouter from de-cni-monitoring namespace
      include_role:
        name: deploy_eventrouter
        tasks_from: uninstall
      vars:
        namespace: de-cni-monitoring
        release_name: de-cni-eventrouter

    - name: Cleanup de-cni-prometheus with helm 3
      kubernetes.core.helm:
        binary_path: "{{ helm_path }}"
        name: de-cni-prometheus
        namespace: de-cni-monitoring
        state: absent
        kubeconfig: "{{ kubeconfig_path }}"
      register: result
      failed_when:
        - result.failed
        - '"uninstallation completed" not in result.stderr'
      tags:
        - skip_ansible_lint

    - name: Cleanup de-cni-prom-operator with helm 3
      kubernetes.core.helm:
        binary_path: "{{ helm_path }}"
        name: de-cni-prom-operator
        namespace: de-cni-monitoring
        state: absent
        kubeconfig: "{{ kubeconfig_path }}"
        wait: true
      tags:
        - skip_ansible_lint

    - name: Remove monitoring CRDs
      block:
        - name: Get list of CRDs
          k8s_info:
            api_version: v1
            kind: CustomResourceDefinition
            namespace: kube-system
            kubeconfig: "{{ kubeconfig_path }}"
          register: crd_list

        - name: Remove monitoring CRDs
          k8s:
            state: absent
            api_version: v1
            kind: CustomResourceDefinition
            name: "{{ item }}"
            kubeconfig: "{{ kubeconfig_path }}"
          loop: "{{ crd_list.resources | map(attribute='metadata.name') | list }}"
          when: '".monitoring.coreos.com" in item'

    - name: Get list of secrets in de-cni-monitoring namespace
      k8s_info:
        api_version: v1
        kind: secrets
        kubeconfig: "{{ kubeconfig_path }}"
        namespace: de-cni-monitoring
      register: secrets_list

    - name: Remove secrets in de-cni-monitoring namespace
      k8s:
        state: absent
        api_version: v1
        kind: Secret
        namespace: de-cni-monitoring
        name: "{{ item }}"
        kubeconfig: "{{ kubeconfig_path }}"
      loop: "{{ secrets_list.resources | map(attribute='metadata.name') | list }}"

    - name: Remove de-cni-monitoring namespace
      k8s:
        name: de-cni-monitoring
        api_version: v1
        kind: Namespace
        state: absent
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Remove prometheus-community repo
      kubernetes.core.helm_repository:
        binary_path: "{{ helm_path }}"
        name: prometheus-community
        state: absent
      tags:
        - skip_ansible_lint

- include: delete-ccd-from-prom.yml