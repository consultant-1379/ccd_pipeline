---
- name: Delete DTT deployment predefined CCD product configuration fields
  hosts: localhost
  connection: local
  gather_facts: false
  environment:
    no_proxy: localhost, atvdtt.athtem.eei.ericsson.se, object.athtem.eei.ericsson.se
  vars_files: vars/group_vars/minio.yml
  vars:
    s3_storage_url: "{{ minio_url }}/de-cni/ccd"
    updated_configuration: []

  tasks:

    - name: Verify deployment_id is defined
      fail: msg="The required variable 'deployment_id' is not defined"
      when: deployment_id is not defined

    - name: Set DTT deployment name
      set_fact:
        dtt_deployment_name: "{{  deployment_id | regex_replace('^ccd-(.*)$', '\\1') }}"

    - name: Download DTT credentials from MinIO
      aws_s3:
        aws_access_key: "{{ minio_access_key }}"
        aws_secret_key: "{{ minio_secret_key }}"
        s3_url: "{{ minio_url }}"
        bucket: tools
        object: dtt_credentials.yml
        mode: getstr
        ignore_nonexistent_bucket: True
      register: dtt_credentials

    - name: Import DTT credentials file
      set_fact:
        dtt_credentials_vars: "{{ dtt_credentials.contents | from_yaml }}"

    - name: Log into DTT
      uri:
        use_proxy: no
        method: POST
        force_basic_auth: true
        url: "{{ dtt_credentials_vars.dtt_url }}/api/auth/signin"
        body:
          username: '{{ dtt_credentials_vars.dtt_user }}'
          password: '{{ dtt_credentials_vars.dtt_password }}'
        body_format: json
        return_content: yes
        status_code: 200
      register: login

    - name: "Verify deployment '{{ dtt_deployment_name }}' exists in DTT"
      uri:
        use_proxy: no
        method: GET
        url: "{{ dtt_credentials_vars.dtt_url }}/api/deployments?q=name={{ dtt_deployment_name }}"
        return_content: yes
        status_code: 200
        headers:
          Cookie: "{{ login.set_cookie }}"
      register: get_depl_result
      until: get_depl_result.json[0] and get_depl_result.json[0].name == dtt_deployment_name
      retries: 1
      delay: 3

    - name: Set deployment as variable
      set_fact:
        dtt_deployment: '{{ get_depl_result.json[0] }}'

    - name: Save deployment DTT ID as variable
      set_fact:
        deployment_dtt_id: '{{ dtt_deployment._id }}'

    - name: Get Non-CCD DTT products
      set_fact:
        non_ccd_products: "{{ dtt_deployment.products | json_query(products_qry) }}"
      vars:
        products_qry: "[? product_type_name != 'CCD']"

    - name: Get CCD DTT product
      set_fact:
        ccd_product: "{{ dtt_deployment.products | json_query(products_qry) | first }}"
      vars:
        products_qry: "[? product_type_name == 'CCD']"

    - name: Delete deployment predefined product configuration fields
      set_fact:
        updated_configuration: "{{ updated_configuration + [item] }}"
      loop: "{{ ccd_product.configuration | json_query(products_qry) }}"
      vars:
        products_qry: "[? key_name == 'ccdFlavor']"

    - name: Update deployment product with merged configuration
      set_fact:
        updated_product: "{{ ccd_product | default([]) | combine({ 'configuration': updated_configuration}) }}"

    - name: Merge updated product with base deployment products list
      set_fact:
        updated_products: "{{ non_ccd_products + [updated_product] }}"

    - name: Update deployment with merged products list
      set_fact:
         updated_deployment: "{{ dtt_deployment | default([]) | combine({ 'products': updated_products}) }}"

    - name: "Update DTT deployment '{{ dtt_deployment_name }}' removing predefined CCD product configuration fields"
      uri:
        use_proxy: no
        method: PUT
        url: "{{ dtt_credentials_vars.dtt_url }}/api/deployments/{{ deployment_dtt_id }}"
        body: "{{ updated_deployment }}"
        body_format: json
        return_content: yes
        status_code: 200
        headers:
          Cookie: "{{ login.set_cookie }}"
      retries: 1
      delay: 3
